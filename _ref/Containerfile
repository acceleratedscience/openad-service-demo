
FROM docker.io/nvidia/cuda:12.6.2-runtime-ubi9

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHON_VERSION=3.10.16

# Install system dependencies
RUN dnf update -y && \
    dnf install -y  \
        gcc gcc-c++ \
        openssl-devel bzip2-devel libffi-devel zlib-devel \
        wget make cmake openssh-server openssh-clients \
        sqlite-devel git xz xz-devel python3-pip  && \
    dnf clean all


RUN yum -y module enable redis:7 && \
INSTALL_PKGS="policycoreutils redis" && \
yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \
rpm -V $INSTALL_PKGS && \
yum -y clean all --enablerepo='*' 


# Install python from source for multiple platform support
RUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz && \
    tar xzf Python-${PYTHON_VERSION}.tgz && \
    cd Python-${PYTHON_VERSION} && \
    ./configure --enable-optimizations && \
    make altinstall && \
    ln -sf /usr/local/bin/python3.10 /usr/bin/python3 && \
    ln -sf /usr/local/bin/pip3.10 /usr/bin/pip3 && \
    cd .. && \
    rm -rf Python-${PYTHON_VERSION} Python-${PYTHON_VERSION}.tgz

# Set up working directory
WORKDIR /workspace

# Copy project install files
#COPY pyproject.toml ./

# Install UV package installer
#RUN pip3 install uv

# Create virtual environment
#RUN uv venv /opt/venv

# Place entry points in the environment at the front of the path
#ENV PATH="/opt/venv/bin:$PATH"

# Create the .ssh directory and add verified hosts
#RUN mkdir -p /root/.ssh && chmod 0700 /root/.ssh && ssh-keyscan -t rsa github.ibm.com github.com >> /root/.ssh/known_hosts

# Setup SSH and install dependencies using BuildKit secret mount
#RUN --mount=type=secret,id=ssh,target=/root/.ssh/id_rsa \
#    --mount=type=cache,target=/tmp/pip_cache \
#    uv pip install --no-cache .

# Copy app
COPY src ./src

# Add app env
ENV \
    HF_HOME="/tmp/.cache/huggingface" \
    MPLCONFIGDIR="/tmp/.config/matplotlib" \
    LOGGING_CONFIG_PATH="/tmp/app.log" \
    gt4sd_local_cache_path="/tmp/.openad_models" \
    GT4SD_S3_HOST="s3.us-east-2.amazonaws.com" \
    GT4SD_S3_HOST_HUB="s3.us-east-2.amazonaws.com" \
    gt4sd_s3_bucket_algorithms="openad-bi-artifacts" \
    gt4sd_s3_bucket_properties="openad-bi-artifacts" \
    gt4sd_s3_bucket_hub_algorithms="openad-bi-artifacts" \
    gt4sd_s3_bucket_hub_properties="openad-bi-artifacts"

# Expose the port your application runs on
EXPOSE 8080
COPY . /app
WORKDIR /app
RUN pip install -e . && mkdir -p /app/data
ENV ASYNC_ALLOW=True
# Set default command
CMD cd /app/data && redis-server  --daemonize yes  && python3 /app/examples/generation/run_server.py


#CMD cd /app/data && redis-server  --daemonize yes  && python3 /app/examples/properties/simple_implementation/implementation.py 
#CMD ["/bin/bash", "-c", "redis-server --daemonize yes && python3 src/serve_models.py"]
